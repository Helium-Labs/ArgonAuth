openapi: 3.0.0
info:
  title: FIDO2 WebAuthn API
  version: 1.0.0
servers:
  - url: https://d72am55u53.execute-api.us-east-1.amazonaws.com/dev
    description: Production/Stagin Endpoint
  - url: http://localhost:5050
    description: Offline development server
paths:
  /:
    get:
      summary: Welcome message
      responses:
        '200':
          description: Welcome to running ASP.NET Core on AWS Lambda
          content:
            text/plain:
              schema:
                type: string
  /test:
    post:
      summary: Test POST message
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: The JSON object that was sent in the request body
          content:
            application/json:
              schema:
                type: object
  /makeCredentialOptions:
    post:
      summary: Generate credential options for registration
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                displayName:
                  type: string
                attType:
                  type: string
                authType:
                  type: string
                residentKey:
                  type: string
                userVerification:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialCreateOptions'
  /makeCredential:
    post:
      summary: Register a new credential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorAttestationRawResponse'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialMakeResult'
  /assertionOptions:
    post:
      summary: Generate assertion options for authentication
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                userVerification:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionOptions'
  /makeAssertion:
    post:
      summary: Authenticate a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorAssertionRawResponse'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssertionVerificationResult'
components:
  schemas:
    CredentialCreateOptions:
      type: object
    AuthenticatorAttestationRawResponse:
      type: object
    CredentialMakeResult:
      type: object
    AssertionOptions:
      type: object
    AuthenticatorAssertionRawResponse:
      type: object
    AssertionVerificationResult:
      type: object
